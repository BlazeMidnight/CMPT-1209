#include <iostream>
#include <iomanip>
using namespace std;

/*
template <typename T>
T sum(T x, T y){ // Only works with one type
    return x + y;
}
*/

// For tests first create a reg function or class and test it; Then convert to Template
template <class T>
class Stack {
    T* arr;
    int size;
    int numElements;
public:
    Stack(T s) {
        arr = new T[s];
        size = s;
        numElements = 0;
    }
    ~Stack() {
        delete[] arr;;
    }
    
    void push(T);
    T pop();
    bool isFull() const;
    bool isEmpty() const;
    void display() const;
};

template <typename T1, typename T2>
T1 sum(T1 x, T2 y){
    return x + y;
}

int main() {
    int a = 1, b = 2;
    double c = 1.75, d = 2.5;
    cout << sum(a, b) << endl << sum(b, c) << endl << sum(c, d) << endl << sum(d, a) << endl;
}
